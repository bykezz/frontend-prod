import { useCallback, useState, useEffect } from "react";
import styles from "./MarketplaceCategories.module.css";
import { useSearch } from "../context/SearchContext";
import axios from "axios";
import { useLocation } from "react-router-dom";

const numButtons = 12;
const initialButtonData = new Array(numButtons).fill(false);

const MarketplaceCategories = () => {
  const [isLatest, setIsLatest] = useState(true);
  const { setProducts, setProducts1 } = useSearch();
  const [categoryFilter, setCategoryFilter] = useState("");
  const location = useLocation();
  const currentPath = location.pathname;

  const resetButtonStates = () => {
    setButtonDataGroup1([...initialButtonData]);
    setButtonDataGroup2([...initialButtonData]);
    setButtonDataGroup3([...initialButtonData]);
    setButtonDataGroup4([...initialButtonData]);
    setButtonDataGroup5([...initialButtonData]);
    setButtonDataGroup6([...initialButtonData]);
    setButtonDataGroup7([...initialButtonData]);
    setButtonDataGroup8([...initialButtonData]);
    setButtonDataGroup9([...initialButtonData]);
    setButtonDataGroup10([...initialButtonData]);
    setButtonDataGroup11([...initialButtonData]);
    setButtonDataGroup12([...initialButtonData]);
  };

  const [buttonDataGroup1, setButtonDataGroup1] = useState(initialButtonData);
  const [buttonDataGroup2, setButtonDataGroup2] = useState(initialButtonData);
  const [buttonDataGroup3, setButtonDataGroup3] = useState(initialButtonData);
  const [buttonDataGroup4, setButtonDataGroup4] = useState(initialButtonData);
  const [buttonDataGroup5, setButtonDataGroup5] = useState(initialButtonData);
  const [buttonDataGroup6, setButtonDataGroup6] = useState(initialButtonData);
  const [buttonDataGroup7, setButtonDataGroup7] = useState(initialButtonData);
  const [buttonDataGroup8, setButtonDataGroup8] = useState(initialButtonData);
  const [buttonDataGroup9, setButtonDataGroup9] = useState(initialButtonData);
  const [buttonDataGroup10, setButtonDataGroup10] = useState(initialButtonData);
  const [buttonDataGroup11, setButtonDataGroup11] = useState(initialButtonData);
  const [buttonDataGroup12, setButtonDataGroup12] = useState(initialButtonData);

  const toggleStyle = (buttonIndex, group) => {
    const newButtonData = new Array(numButtons).fill(false);
    newButtonData[buttonIndex] = true;
    if (group === 1) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup1(newButtonData);
    } else if (group === 2) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup2(newButtonData);
    } else if (group === 3) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup3(newButtonData);
    } else if (group === 4) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup4(newButtonData);
    }
    if (group === 5) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup5(newButtonData);
    } else if (group === 6) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup6(newButtonData);
    }
    if (group === 7) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup7(newButtonData);
    } else if (group === 8) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup8(newButtonData);
    }
    if (group === 9) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup9(newButtonData);
    }
    if (group === 10) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup10(newButtonData);
    }
    if (group === 11) {
      resetButtonStates();
      setIsLatest(true);
      setButtonDataGroup11(newButtonData);
    } else if (group === 12) {
      resetButtonStates();
      setIsLatest(false);
      setButtonDataGroup12(newButtonData);
    }
  };

  useEffect(() => {
    if (currentPath === "/farmers-deals" && categoryFilter !== "Latest") {
      axios
        .get(`http://13.53.125.166/product/?category__name=${categoryFilter}`)
        .then((response) => {
          setProducts(response.data);
          console.log(response.data);
        })
        .catch((error) => {
          console.error("Error while filtering categories:", error);
        });
    } else if (currentPath === "/marketplace" && categoryFilter !== "Latest") {
      axios
        .get(
          `http://13.53.125.166/farmjointitem/?category__name=${categoryFilter}`
        )
        .then((response) => {
          setProducts1(response.data);
          console.log(response.data);
        })
        .catch((error) => {
          console.error("Error while filtering categories:", error);
        });
    } else if (
      currentPath === "/farmers-deals" &&
      categoryFilter === "Latest"
    ) {
      axios
        .get(`http://13.53.125.166/product/`)
        .then((response) => {
          setProducts(response.data);
          console.log(response.data);
        })
        .catch((error) => {
          console.error("Error while filtering categories:", error);
        });
    } else if (currentPath === "/marketplace" && categoryFilter === "Latest") {
      axios
        .get(`http://13.53.125.166/farmjointitem/`)
        .then((response) => {
          setProducts1(response.data);
          console.log(response.data);
        })
        .catch((error) => {
          console.error("Error while filtering categories:", error);
        });
    }
  }, [categoryFilter, currentPath]);
  useEffect(() => {
    setIsLatest(true);
  }, []);

  return (
    <div className={styles.marketplaceCategories1}>
      <div className={styles.marketplaceCategories}>
        <div className={styles.frameParent}>
          {buttonDataGroup1.map((isActive, index) => (
            <button
              className={styles.frameWrapper}
              key={index}
              onClick={() => {
                setCategoryFilter("Fish");
                toggleStyle(index, 1);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.fish}>Fish</div>
              <svg
                className={styles.frameItem}
                width="60"
                height="61"
                viewBox="0 0 60 61"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect
                  x="0.5"
                  y="0.5"
                  width="59"
                  height="59"
                  rx="9.5"
                  fill="white"
                  stroke="#EEEEEE"
                />
                <g clipPath="url(#clip0_113_873)">
                  <path
                    d="M25.6401 25.6716C22.4538 28.3722 20.7924 32.8052 19.6834 35.2578C18.892 35.0298 18.0879 34.8488 17.2751 34.7157C13.7179 34.1266 10.4864 35.4599 10.4864 35.4599C10.4864 35.4599 13.1564 38.7352 16.3209 39.6783C15.1964 42.7835 16.2402 46.8782 16.2402 46.8782C16.2402 46.8782 19.2346 45.0743 20.8776 41.8647C21.251 41.1385 21.5813 40.3909 21.8666 39.6258C24.4948 40.1971 29.0642 41.4992 33.1356 40.546L34.0094 45.1273C36.5888 43.2294 38.3692 39.7461 39.0443 38.2635C48.0821 33.1936 48.5237 25.5284 47.6949 23.8836C46.9021 22.3104 40.4425 18.0331 31.0189 22.268C29.4539 21.9367 25.5634 21.2913 22.4779 22.2435L25.6401 25.6716Z"
                    stroke={isActive ? "black" : "#AEAEAE"}
                    strokeWidth="1.5"
                    strokeLinejoin="round"
                  />
                  <path
                    d="M41.9736 26.7658C42.6055 26.4473 42.8597 25.6769 42.5412 25.045C42.2228 24.4131 41.4524 24.1589 40.8205 24.4774C40.1885 24.7958 39.9344 25.5662 40.2528 26.1981C40.5713 26.8301 41.3417 27.0842 41.9736 26.7658Z"
                    fill={isActive ? "black" : "#AEAEAE"}
                  />
                  <path
                    d="M42.8869 35.2738C40.5314 33.7367 38.6242 31.6043 37.3585 29.0926C36.0928 26.5809 35.5136 23.7792 35.6797 20.9715"
                    stroke={isActive ? "black" : "#AEAEAE"}
                    strokeWidth="1.5"
                    strokeMiterlimit="20"
                    strokeLinecap="round"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_113_873">
                    <rect
                      width="41"
                      height="41"
                      fill="white"
                      transform="translate(3 23.4504) rotate(-26.7443)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </button>
          ))}
          {buttonDataGroup2.map((isActive, index) => (
            <button
              className={styles.rectangleParent}
              key={index}
              onClick={() => {
                setCategoryFilter("Nuts");
                toggleStyle(index, 2);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.nuts}>Nuts</div>
              <svg
                className={styles.emojioneMonotonepeanutsIcon}
                width="35"
                height="35"
                viewBox="0 0 35 35"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M32.398 4.80543C32.2164 3.04449 31.9287 2.44621 31.7242 2.14762C31.442 1.73582 30.6879 1.12387 29.9693 1.12387C29.9157 1.12387 29.8648 1.12715 29.814 1.13316C29.4317 1.17855 29.0631 1.37762 28.6453 1.77355C27.5306 1.32127 26.3385 1.09038 25.1355 1.09379C22.3377 1.09379 19.5278 2.29527 17.4262 4.39035C15.9852 5.82754 15.348 7.2609 14.7853 8.52527C14.268 9.69011 13.8195 10.6969 12.8149 11.573C11.6205 12.6148 10.4546 12.8631 9.10219 13.1513C7.5682 13.4783 5.83023 13.8486 4.15078 15.5236C2.17984 17.4886 1.0943 20.1201 1.09375 22.9327C1.09375 25.8443 2.24437 28.595 4.33344 30.6781C6.42195 32.76 9.17875 33.9063 12.0963 33.9063C14.916 33.9063 17.5536 32.824 19.524 30.8591C21.2062 29.1824 21.6393 27.5117 22.021 26.0373C22.3448 24.7882 22.6499 23.6081 23.7043 22.3896C24.6045 21.3489 25.5823 20.836 26.7127 20.2421C27.8862 19.6263 29.2168 18.9285 30.607 17.5416C34.2054 13.9541 34.9491 8.53347 32.398 4.80543ZM29.8834 16.8153C27.2923 19.3999 24.961 19.3703 22.9288 21.7192C20.3973 24.6455 21.6442 27.2978 18.7999 30.1334C16.9608 31.9676 14.5398 32.8809 12.0963 32.8809C9.56703 32.8809 7.01367 31.9014 5.0575 29.9524C1.21242 26.1171 1.13039 19.9828 4.87539 16.2488C7.70055 13.4313 10.5935 14.8718 13.4898 12.3452C15.8441 10.2922 15.5444 7.71644 18.1502 5.1166C20.1409 3.13254 22.6959 2.11972 25.1349 2.11972C26.4567 2.11972 27.7446 2.41722 28.8903 3.01933C29.2239 2.61683 29.6434 2.18754 29.9343 2.15199C29.9457 2.15087 29.9572 2.15032 29.9688 2.15035C30.2504 2.15035 30.7284 2.51074 30.8782 2.72949C31.1768 3.16371 31.3305 4.37832 31.4027 5.17675C33.8319 8.47058 33.2571 13.4521 29.8834 16.8153Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M30.635 3.12329C30.4687 2.6579 30.0755 2.37134 29.9727 2.37134C29.6769 2.37134 29.0966 3.16759 29.0966 3.16759L30.6656 4.48938C30.6656 4.48938 30.8297 3.66688 30.635 3.12329ZM23.7947 3.71993C24.4159 3.75438 26.2611 2.96087 26.108 2.80829C26.0374 2.73829 25.8979 2.67923 25.7131 2.63329C25.1651 2.91274 24.207 3.25892 23.7925 3.2354C23.6 3.22501 23.2106 3.04673 22.9312 2.88212C22.8181 2.9385 22.7139 3.01129 22.6222 3.09813C22.5379 3.18071 23.4627 3.70134 23.7947 3.71993ZM20.5293 6.52103C20.9553 6.37009 22.8251 4.48993 22.7977 4.25915C22.7906 4.20228 22.7217 4.13884 22.6167 4.07649C22.1447 4.67806 20.8662 5.91946 20.5227 6.04087C20.2154 6.15079 19.2802 5.64603 18.8947 5.3086C18.8088 5.40868 18.7497 5.4929 18.7328 5.54923C18.6672 5.76743 20.1301 6.66267 20.5293 6.52103ZM17.499 9.79954C17.8004 9.80829 19.651 7.57485 19.6412 7.32657C19.6384 7.27024 19.5815 7.20188 19.4924 7.1286C19.0571 7.7936 17.7386 9.33251 17.4887 9.32431C17.1884 9.31556 16.6421 9.05524 16.4326 8.76376C16.3796 8.92509 16.3539 9.04595 16.3703 9.09899C16.4715 9.44298 17.1512 9.7886 17.499 9.79954ZM15.597 12.8325C15.8021 12.8101 17.2223 11.1235 17.2836 10.8495C17.2994 10.7784 17.2491 10.6844 17.1594 10.5838C16.8116 11.1175 15.7578 12.3414 15.5822 12.3611C15.3154 12.3895 14.8533 12.1068 14.6586 11.8142C14.6286 11.87 14.6042 11.9286 14.5858 11.9892C14.5229 12.3447 15.2372 12.8713 15.597 12.8325ZM12.6007 15.2355C12.8872 15.2196 14.4174 14.0099 14.5273 13.8338C14.599 13.7195 14.5744 13.55 14.4978 13.3799C14.3277 13.5981 12.8626 14.752 12.5821 14.7679C12.313 14.7816 11.893 14.3616 11.6994 14.0094C11.6769 14.028 11.6562 
                14.0487 11.6376 14.0712C11.4692 14.3184 12.2009 15.2563 12.6007 15.2355ZM8.46412 16.968C8.80647 17.0084 10.8687 15.8934 11.035 15.7074C11.1509 15.5789 11.1493 15.3525 11.082 15.1206C11.0685 15.1652 11.0458 15.2064 11.0153 15.2415C10.849 15.428 8.78459 16.5452 8.4417 16.5037C8.11795 16.4654 7.7067 15.8731 7.55303 15.4154C7.35232 15.7124 7.99873 16.9106 8.46412 16.968ZM5.45467 19.5356C5.80795 19.5038 7.43545 17.7845 7.53115 17.5389C7.57162 17.4345 7.54428 17.2917 7.47428 17.1353C7.2249 17.5187 5.76092 19.0466 5.42787 19.0773C5.06092 19.1106 4.4424 18.5189 4.21217 18.0716C4.19084 18.1044 4.17443 18.1306 4.16514 18.1514C4.01092 18.4943 4.96084 19.5799 5.45467 19.5356ZM4.75412 20.8628C4.77162 20.7895 4.74264 20.6796 4.68576 20.5527C4.53756 21.0772 4.03662 22.7009 3.77467 22.6806C3.43232 22.6538 2.96037 22.1677 2.79959 21.8379C2.78217 21.9259 2.77175 22.0151 2.76842 22.1048C2.77279 22.3892 3.38912 23.1023 3.80475 23.1356C4.10334 23.1592 4.70764 21.0602 4.75412 20.8628ZM3.21303 25.8208C2.991 25.8027 2.75529 24.4645 2.66943 23.554C2.69896 24.3688 2.98225 26.2534 3.24639 26.2731C3.48975 26.2917 3.59803 24.3667 3.63576 24.2053C3.64998 24.1435 3.62373 24.0626 3.57725 23.9762C3.52365 24.522 3.41428 25.8356 3.21303 25.8208ZM5.21787 26.2523C5.06857 26.6488 4.566 27.7458 4.21107 27.392C4.05303 27.235 3.95842 26.9266 3.91193 26.5744C3.92342 27.1032 4.02076 27.6217 4.24443 27.8448C4.65131 28.2511 5.25342 26.7423 5.29115 26.5809C5.30701 26.517 5.27584 26.3967 5.21787 26.2523ZM4.43639 23.5999C4.40357 23.7826 4.39482 23.9215 4.41943 23.9751C4.49162 24.1288 5.5274 25.6168 5.69256 25.6551C6.02232 
                25.7322 7.09146 23.9696 7.04006 23.7038C7.02056 23.6263 6.99173 23.5513 6.9542 23.4807C6.73545 24.0358 5.9392 25.2646 5.66248 25.2006C5.51209 25.1662 4.65295 23.9472 4.43639 23.5999ZM10.4651 19.2873C10.2557 19.3283 9.37795 18.2898 9.05201 17.686C8.99514 17.7309 8.9574 17.7659 8.95303 17.7845C8.87646 18.1137 10.2223 19.8019 10.4887 19.7499C10.9234 19.6657 12.9589 18.3751 12.9851 17.9994C12.9912 17.9141 12.9578 17.7981 12.9009 17.6669C12.5597 18.147 10.8589 19.2102 10.4651 19.2873ZM12.8763 15.8709C12.8287 15.9125 12.7965 15.9475 12.7926 15.965C12.7161 16.2942 13.7163 17.6434 13.9821 17.592C14.4174 17.5077 16.3364 15.994 16.3626 15.6183C16.3697 15.5237 16.3358 15.4154 16.2762 15.3033C15.9312 15.8277 14.3534 17.0495 13.964 17.126C13.7601 17.1654 13.1295 16.3872 12.8763 15.8709ZM16.1215 13.3203C16.0739 13.3881 16.0444 13.4346 16.04 13.4554C15.964 13.7846 16.9631 14.9735 17.2283 14.9227C17.399 14.8899 17.7823 14.5967 18.187 14.2309C18.4495 13.9941 18.7197 13.7272 18.9477 13.4789C19.2654 13.1338 19.5012 12.8259 19.5099 12.6925C19.5165 12.611 19.4782 12.5131 19.4158 12.4098C19.0522 12.9971 17.5964 14.3763 17.2136 14.4513C17.0074 14.4923 16.3687 13.7934 16.1215 13.3203ZM19.9873 11.2996C19.7757 11.3406 18.8569 10.6204 18.5261 10.1572C18.4643 10.2513 18.4233 10.3191 18.4183 10.342C18.3418 10.6702 19.7325 11.8274 19.9983 11.7749C20.4336 11.6906 22.1683 9.69837 22.1956 9.32321C22.2005 9.24829 22.1622 9.1586 22.0999 9.06126C21.7373 9.69892 20.3669 11.2258 19.9873 11.2996ZM23.017 7.95603C22.8076 7.99704 21.8073 7.24563 21.4333 6.76548C21.3545 6.85188 21.3031 6.91532 21.2976 6.93884C21.2216 
                7.26696 22.7578 8.48813 23.0236 8.43618C23.4583 8.35142 25.4227 6.57517 25.4495 6.20001C25.4555 6.12126 25.4145 6.0261 25.3467 5.92493C24.9387 6.52212 23.3965 7.88274 23.017 7.95603ZM24.8824 4.11095C24.7911 4.17001 24.7309 4.21704 24.7249 4.24329C24.6483 4.57142 26.0062 5.73626 26.272 5.68431C26.7068 5.60009 28.4874 4.14649 28.5137 3.77079C28.5213 3.67618 28.4792 3.5854 28.4065 3.50063C28.0122 4.04313 26.645 5.12759 26.2709 5.20032C26.068 5.2397 25.2362 4.57634 24.8824 4.11095ZM7.56068 22.1327C7.17295 22.0583 6.26022 20.9219 5.97365 20.3641C5.93209 20.4516 5.90857 20.5265 5.91076 20.5806C5.92553 20.9181 7.12975 22.5034 7.58803 22.5909C7.91889 22.6549 9.68639 20.8842 9.66615 20.317C9.66396 20.2542 9.63662 20.1645 9.59342 20.0606C9.31943 20.76 7.85928 22.1901 7.56068 22.1327ZM32.5304 10.0806C32.4987 10.8058 32.3314 11.572 31.9699 11.9362C31.8972 12.01 31.4974 11.3281 31.3787 10.9288C31.3563 11.0347 31.3458 11.1427 31.3476 11.2509C31.3662 11.5813 31.8879 12.5044 31.9726 12.4202C32.4156 11.9734 32.5665 10.9206 32.5304 10.0806ZM29.5062 15.8195C29.3362 15.8704 28.7625 15.008 28.5776 14.4305C28.5623 14.4547 28.5493 14.4804 28.5388 14.507C28.3966 14.9052 29.2946 16.3637 29.5128 16.2981C29.865 16.1931 31.2376 14.5852 31.3552 13.824C31.3705 13.7239 31.3607 13.5806 31.3328 13.4209C31.1419 14.2084 29.8469 15.7162 29.5062 15.8195ZM25.9428 18.1788C25.6907 18.1055 25.4397 17.7259 25.3172 17.3902C25.2772 17.4487 25.2494 17.4979 25.251 17.528C25.2619 17.8747 25.6081 18.5523 25.9537 18.654C26.2403 18.7382 28.4201 17.6636 28.6176 17.3743C28.6597 17.3114 28.6389 17.1408 28.5809 16.927C28.278 17.2513 
                26.2206 18.2613 25.9428 18.1788ZM23.04 19.961C22.7819 20.0075 22.4368 19.6482 22.2793 19.3097C22.2377 19.3611 22.2109 19.4016 22.2087 19.4251C22.1699 19.7833 22.6976 20.4959 23.0542 20.4335C23.2653 20.3963 24.9497 19.3956 25.0541 19.1254C25.0935 19.0231 25.0694 18.87 25.0093 18.7032C24.7572 19.0286 23.2396 19.926 23.04 19.961ZM20.9476 22.9049C20.7508 23.0394 20.1153 22.6035 19.8747 22.2191C19.8298 22.3033 19.8008 22.3711 19.7981 22.4127C19.7779 22.8113 20.719 23.5409 20.9657 23.3724C21.1926 23.2171 22.2924 21.3085 22.2525 21.1133C22.2335 21.0401 22.199 20.9718 22.1513 20.9131C21.8921 21.4961 21.1325 22.778 20.9476 22.9049ZM20.6261 24.3765C20.4369 25.1252 19.8101 26.7806 19.6198 26.9665C19.3967 27.1847 18.4118 26.7089 18.1197 26.2681C18.0793 26.3879 18.0558 26.4847 18.0618 26.5366C18.1203 27.0124 19.3858 27.6807 19.6422 27.4308C19.8785 27.2006 20.7819 24.715 20.6944 24.4919C20.6767 24.4506 20.6537 24.4118 20.6261 24.3765ZM16.8483 30.3631C16.5694 30.4884 15.8032 29.8912 15.5445 29.3984C15.5159 29.4406 15.496 29.488 15.486 29.5379C15.4417 30.0295 16.5305 30.9762 16.8751 30.8225C17.1917 30.6825 19.0932 28.9298 19.0472 28.6766C19.0235 28.5824 18.9823 28.4936 18.9258 28.4146C18.5425 28.9495 17.119 30.2428 16.8483 30.3631ZM12.879 31.7604C12.6625 31.7566 12.1982 31.4017 11.9729 31.0489C11.9094 31.097 11.8717 31.143 11.875 31.1824C11.9083 31.5963 12.6242 32.2121 12.9097 32.2159C13.3116 32.222 15.7605 31.5991 15.6845 31.377C15.6544 31.2912 15.5795 31.1845 15.4783 31.0713C14.9194 31.3448 13.2094 31.7653 12.879 31.7604ZM9.21498 31.5417C8.93006 31.5952 8.72334 31.6592 8.72881 31.7396C8.75561 
                32.0787 11.8925 32.4517 11.8301 32.2712C11.7924 32.1613 11.6896 32.0103 11.5627 31.8632C11.0656 31.8654 9.89748 31.7232 9.21498 31.5417ZM9.94014 30.7104C9.94396 30.6295 9.87287 30.5239 9.76021 30.4134C9.2817 30.6667 7.75701 30.7372 7.20686 30.3577C7.08107 30.4906 7.03404 30.6256 7.15271 30.7432C7.6892 31.2786 9.92264 31.0959 9.94014 30.7104ZM11.0339 30.5693C11.2827 30.6858 13.3975 30.0799 13.3625 29.5882C13.3581 29.527 13.3072 29.44 13.229 29.3432C12.8074 29.7785 11.2176 30.2138 11.0038 30.1138C10.8802 30.0569 9.90021 29.3848 9.49443 29.0331C9.39162 29.1409 9.3342 29.2344 9.34896 29.2995C9.3867 29.4652 10.8802 30.4982 11.0339 30.5693ZM18.8706 23.4326C18.8963 23.3784 18.8438 23.2789 18.7459 23.1592C18.4069 23.7629 17.3623 25.5539 17.219 25.5867C16.9467 25.6496 15.7381 24.7396 15.3613 24.2753C15.3228 24.3531 15.2926 24.4346 15.2711 24.5187C15.2186 24.7834 16.9133 26.1254 17.242 26.0494C17.4083 26.0111 18.7984 23.5857 18.8706 23.4326ZM19.0658 22.2213C19.2321 22.1841 20.5982 20.0677 20.6704 19.9129C20.7015 19.8478 20.66 19.7237 20.5752 19.5799C20.2673 20.0808 19.1938 21.7209 19.0478 21.7548C18.7842 21.8155 17.8644 21.1888 17.5346 20.8005C17.4906 20.8737 17.4569 20.9526 17.4345 21.0351C17.3831 21.3003 18.7366 22.2973 19.0658 22.2213ZM23.758 17.1583C23.7876 17.0965 23.7438 16.9598 23.6541 16.7897C23.2587 17.1873 21.7165 18.4779 21.5689 18.5113C21.3091 18.5709 20.5167 17.9688 20.2154 17.5805C20.159 17.6702 20.1219 17.7456 20.112 17.7987C20.0601 18.0634 21.2544 19.0592 21.5831 18.9832C21.7499 18.9455 23.6858 17.312 23.758 17.1583ZM24.7069 16.612C24.8726 16.5731 27.1503 14.8811 27.2225 
                14.728C27.2504 14.6689 27.2066 14.5273 27.1197 14.349C26.68 14.746 24.8452 16.1023 24.6965 16.1367C24.4351 16.1969 23.653 15.3383 23.3659 14.8488C23.3145 14.9243 23.279 14.9894 23.2697 15.0375C23.2177 15.3017 24.3771 16.6874 24.7069 16.612ZM28.1194 13.7409C28.2862 13.702 30.25 11.5977 30.3222 11.4434C30.349 11.3855 30.309 11.2504 30.2276 11.0803C29.8316 11.5572 28.2615 13.2263 28.1139 13.2602C27.8481 13.322 27.0004 12.3392 26.7101 11.8164C26.6693 11.8795 26.6382 11.9482 26.6176 12.0204C26.5651 12.2851 27.7901 13.8169 28.1194 13.7409ZM29.4712 8.55868C29.422 8.65001 29.3892 8.72657 29.3777 8.78126C29.3263 9.04595 30.4939 10.3995 30.8237 10.324C30.9899 10.2852 31.9956 8.15563 32.0678 8.00196C32.1022 7.92649 32.0908 7.76134 32.0443 7.56665C31.872 7.93032 30.9779 9.80392 30.822 9.83946C30.5568 9.90071 29.749 9.03665 29.4712 8.55868ZM16.7624 26.8462C16.7586 26.7915 16.7187 26.7209 16.6574 26.64C16.2954 27.3132 14.8172 28.6405 14.4114 28.6235C14.1194 28.6115 12.8944 27.7157 12.5088 27.1765C12.447 27.2788 12.412 27.3619 12.4219 27.4117C12.5104 27.8688 14.0997 29.0681 14.4382 29.0834C14.9052 29.1031 16.7969 27.3367 16.7624 26.8462ZM7.69467 28.9757C7.68154 28.9074 7.6367 28.8171 7.57162 28.7154C7.28232 29.0588 6.39803 29.5926 6.12951 29.5313C5.98295 29.4969 5.26053 28.7548 5.04232 28.4731C4.99912 28.641 4.98654 28.7777 5.01607 28.8395C5.08826 28.9938 5.99717 29.9448 6.16342 29.9825C6.49264 30.0602 7.74607 29.2409 7.69467 28.9757ZM8.38045 28.5951C8.82178 28.6886 10.2972 27.538 10.2251 26.9539C10.2111 26.8816 10.1866 26.8118 10.1523 26.7467C9.90514 27.3564 8.73428 28.2216 8.34928 28.1395C8.14857 
                28.0974 6.76061 26.6788 6.42209 26.249C6.3674 26.4049 6.34771 26.5312 6.37889 26.599C6.4724 26.8046 8.15842 28.5475 8.38045 28.5951ZM15.871 21.1499C15.8514 21.1136 15.8286 21.0792 15.8026 21.0471C15.5576 21.7351 14.6383 23.0137 14.0237 23.0038C13.4959 22.9956 11.8569 21.442 11.5108 20.6506C11.4779 20.7381 11.4594 20.8218 11.467 20.894C11.5261 21.565 13.4647 23.4572 14.0466 23.4665C14.8062 23.4796 16.0312 21.5229 15.871 21.1499ZM18.5119 17.8643C18.5042 17.8359 18.4637 17.7768 18.4052 17.7002C18.0973 18.316 17.1135 19.552 16.5929 19.6389C16.1772 19.7078 15.1529 18.788 14.8779 18.1645C14.8522 18.2156 14.8348 18.2704 14.8265 18.327C14.7734 18.8848 16.1209 20.1874 16.6109 20.1054C17.2513 19.9993 18.5901 18.1563 18.5119 17.8643ZM19.5318 17.1933C20.2269 17.032 21.798 14.9577 21.7351 14.6509C21.7286 14.6192 21.687 14.5541 21.6236 14.4704C21.2736 15.1365 20.0951 16.5874 19.517 16.7213C19.0702 16.8247 18.0508 15.9273 17.7911 15.2787C17.7692 15.3274 17.7539 15.3727 17.7468 15.4132C17.6494 16.0164 19.0008 17.3158 19.5318 17.1933ZM24.884 11.9854C24.8939 11.8963 24.8704 11.7891 24.8244 11.6737C24.5089 12.383 22.8398 13.7863 22.4138 13.7967C22.2142 13.8005 21.1598 12.7171 20.8251 12.2741C20.7546 12.4163 20.7174 12.5279 20.7316 12.5842C20.7808 12.7866 22.1907 14.2774 22.4237 14.2719C22.8869 14.2609 24.8124 12.6105 24.884 11.9854ZM28.1002 8.71509C28.1029 8.61584 28.0848 8.51712 28.0472 8.42524C27.7551 9.20673 26.2086 10.8747 25.7645 10.8643C25.5534 10.8605 24.1485 9.41345 23.7269 8.87806C23.6415 9.01368 23.5962 9.12142 23.6131 9.18048C23.6749 9.39431 25.5261 11.3395 25.7694 11.3445C26.2551 11.3559 28.0548 9.36642 28.1002 8.71509ZM27.1038 6.18579C27.0103 6.3154 26.9583 6.41493 26.9682 6.4647C27.0004 6.62821 28.2976 8.00907 28.489 7.99321C28.868 7.96368 30.4408 6.25962 30.5278 5.74446C30.5442 5.64657 30.5223 5.53337 30.4731 5.41579C30.1789 6.05345 28.8352 7.48134 28.4879 7.50868C28.3321 7.52181 27.4478 6.61509 27.1038 6.18579ZM11.3287 25.9351C10.8518 25.9209 9.02631 24.0188 8.60467 23.3079C8.55764 23.4162 8.53248 23.5081 8.54232 23.5699C8.61068 24.0106 10.825 26.377 11.356 26.3934C11.8728 26.4092 13.421 24.9442 13.334 24.2606C13.3226 24.1955 13.3026 24.1322 13.2744 24.0724C13.0409 24.8113 11.7842 25.9488 11.3287 25.9351Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                  stroke={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup11.map((index) => (
            <button
              className={styles.rectangleGroup}
              key={index}
              onClick={() => {
                setCategoryFilter("Latest");
                toggleStyle(index, 11);
              }}
            >
              <div
                className={isLatest ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isLatest ? styles.hot : styles.nuts}>Latest</div>

              <svg
                className={styles.octiconfire24}
                width="30"
                height="30"
                viewBox="0 0 30 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M17.8312 2.03366C17.8312 6.46491 20.1675 8.69241 22.18 10.8099C24.105 12.8349 25.9375 14.7637 25.9375 18.4374C25.9375 24.4524 21.2462 28.7499 15.2312 28.7499C9.215 28.7499 4.0625 24.4737 4.0625 18.4374C4.0625 15.8887 5.265 13.4237 7.19875 12.3137C7.58 12.0949 8.03875 12.3224 8.2025 12.7312C9.45375 15.8549 10.9962 15.7999 11.7962 14.9999C12.2812 14.5162 12.3837 13.6049 
11.7912 12.4224C8.785 6.40741 14.12 2.07366 17.0412 1.35491C17.4612 1.25241 17.81 1.60241 17.8312 2.03366ZM15.2312 26.8749C20.305 26.8749 24.0625 23.3249 24.0625 18.4374C24.0625 15.5162 22.6962 14.0762 20.715 11.9899L20.6887 11.9612C18.8887 10.0649 16.765 7.77241 16.1275 3.76491C15.1836 4.31971 14.3692 5.06979 13.7387 5.96491C12.755 7.39491 12.305 9.25616 13.4687 11.5837C14.2225 13.0899 14.44 15.0087 13.1225 16.3262C12.3012 17.1474 10.92 17.7012 9.4275 17.0587C8.4875 16.6537 7.73625 15.8649 7.13 14.8212C6.42125 15.7037 5.9375 16.9962 5.9375
 18.4374C5.9375 23.2462 10.0475 26.8749 15.2312 26.8749Z"
                  fill={isLatest ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup3.map((isActive, index) => (
            <button
              className={styles.rectangleContainer}
              key={index}
              onClick={() => {
                setCategoryFilter("Vegetables");
                toggleStyle(index, 3);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.vegetables}>
                Vegetables
              </div>
              <svg
                className={styles.phcarrotLightIcon}
                width="40"
                height="40"
                viewBox="0 0 40 40"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M36.2499 10.3125H31.0124L35.6624 5.6625C35.7545 5.57667 35.8284 5.47317 35.8796 5.35817C35.9308 5.24317 35.9584 5.11903 35.9606 4.99315C35.9628 4.86727 35.9397 4.74224 35.8925 4.6255C35.8454 4.50877 35.7752 
4.40273 35.6862 4.3137C35.5972 4.22468 35.4911 4.1545 35.3744 4.10735C35.2576 4.0602 35.1326 4.03704 35.0067 4.03926C34.8808 4.04148 34.7567 4.06903 34.6417 4.12027C34.5267 4.17151 34.4232 4.24539 34.3374 4.3375L29.6874 8.9875V3.75C29.6874 3.50136 29.5886 3.2629 29.4128 
3.08709C29.237 2.91127 28.9985 2.8125 28.7499 2.8125C28.5012 2.8125 28.2628 2.91127 28.087 3.08709C27.9112 3.2629 27.8124 3.50136 27.8124 3.75V9.39844C25.9509 8.17876 23.7261 7.63722 21.5123 7.86486C19.2985 8.09251 17.2305 9.07546 15.6561 10.6484C9.40145 16.7813 4.6952 31.4766 
4.27801 32.8125C4.08277 33.2208 4.01896 33.6796 4.09538 34.1256C4.17179 34.5717 4.38467 34.983 4.70467 35.303C5.02467 35.623 5.43605 35.8359 5.8821 35.9123C6.32815 35.9887 6.78693 35.9249 7.1952 35.7297C8.52332 35.3125 23.2296 30.6031 29.3499 24.3594C30.9244 22.7846 31.9083 20.7155 32.136 18.5002C32.3637 16.285 31.8212 14.059 30.5999 12.1969H36.2499C36.4985 12.1969 36.737 
12.0981 36.9128 11.9223C37.0886 11.7465 37.1874 11.508 37.1874 11.2594C37.1874 11.0107 37.0886 10.7723 36.9128 10.5965C36.737 10.4206 36.4985 10.3219 36.2499 10.3219V10.3125ZM28.0171 23.0328C26.5624 24.5313 24.5311 25.9375 22.2952 27.225L18.1608 23.0891C17.9849 22.9132 17.7463 22.8143 17.4975 22.8143C17.2488 22.8143 17.0102 22.9132 16.8343 23.0891C16.6583 23.265 16.5595 23.5036 16.5595 
23.7523C16.5595 24.0011 16.6583 24.2397 16.8343 24.4156L20.5843 28.1656C14.0702 31.6031 6.67801 33.9188 6.56395 33.9469C6.50684 33.9649 6.45142 33.9879 6.39832 34.0156C6.33932 34.0466 6.27199 34.0578 6.20613 34.0478C6.14027 34.0378 6.07935 34.0069 6.03224 33.9598C5.98514 33.9127 5.95432 33.8518 5.94428 33.7859C5.93425 33.7201 5.94552 33.6528 5.97645 33.5938C6.0042 33.5437 6.02772 33.4915 6.04676 33.4375C6.09364 33.2813 10.5546 19.0188 16.3249 12.6563L21.8358 18.1656C21.9216 
18.2577 22.0251 18.3316 22.1401 18.3829C22.2551 18.4341 22.3793 18.4616 22.5052 18.4639C22.631 18.4661 22.7561 18.4429 22.8728 18.3958C22.9896 18.3486 23.0956 18.2784 23.1846 18.1894C23.2736 18.1004 23.3438 17.9944 23.391 17.8776C23.4381 17.7609 23.4613 17.6359 23.4591 17.51C23.4568 17.3841 23.4293 17.26 23.378 17.145C23.3268 17.03 23.2529 16.9265 23.1608 16.8406L17.6764 11.3563C19.2432 10.1245 21.2215 9.53805 23.2064 9.71698C25.1913 9.89591 27.0328 10.8267 28.3541 12.3188C29.6753 13.8109 30.3763 15.7515 30.3136 17.7435C30.251 
19.7355 29.4294 21.6282 28.0171 23.0344V23.0328Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup4.map((isActive, index) => (
            <button
              className={styles.groupButton}
              key={index}
              onClick={() => {
                setCategoryFilter("Fruits");
                toggleStyle(index, 4);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.fruits}>
                Fruits
              </div>

              <svg
                className={styles.iconParkOutlineorange}
                width="48"
                height="48"
                viewBox="0 0 48 48"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M41 26C41 35.941 35 44 24 44C13 44 7 35.94 7 26C7 22.32 8.104 18.898 10 16.047C13.225 11.197 17.74 13 24 13C30.26 13 34.775 11.197 38 16.047C39.895 18.897 41 22.32 41 26Z"
                  stroke={isActive ? "black" : "#AEAEAE"}
                  strokeWidth="4"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M26 13L29 9H26L24 7L22 9H19L22 13"
                  stroke={isActive ? "black" : "#AEAEAE"}
                  strokeWidth="4"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M18 22C19.1046 22 20 21.1046 20 20C20 18.8954 19.1046 18 18 18C16.8954 18 16 18.8954 16 20C16 21.1046 16.8954 22 18 22Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M15 29C16.1046 29 17 28.1046 17 27C17 25.8954 16.1046 25 15 25C13.8954 25 13 25.8954 13 27C13 28.1046 13.8954 29 15 29Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M21 27C22.1046 27 23 26.1046 23 25C23 23.8954 22.1046 23 21 23C19.8954 23 19 23.8954 19 25C19 26.1046 19.8954 27 21 27Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M18 34C19.1046 34 20 33.1046 20 32C20 30.8954 19.1046 30 18 30C16.8954 30 16 30.8954 16 32C16 33.1046 16.8954 34 18 34Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup6.map((isActive, index) => (
            <button
              className={styles.rectangleParent2}
              key={index}
              onClick={() => {
                setCategoryFilter("Tubers");
                toggleStyle(index, 6);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.tubers}>
                Tubers
              </div>

              <svg
                className={styles.emojioneMonotonepotatoIcon}
                width="40"
                height="40"
                viewBox="0 0 40 40"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M37.8852 9.0525C36.734 6.13875 33.4221 1.25 24.1684 1.25C19.1259 1.25 16.709 4.06125 14.1502 7.03687C12.7327 8.68625 11.2671 10.3912 9.26148 11.7056C2.32461 16.25 -0.124769 21.8125 1.98086 28.24C4.07273 34.6244 8.94586 38.75 14.3971 38.75C16.3521 38.75 18.344 38.2344 20.319 37.2156C25.8015 34.39 28.9659 30.1363 31.7584 26.3831C33.0977 
24.5838 34.3615 22.8837 35.7084 21.6206C38.6796 18.8362 39.6159 13.4325 37.8852 9.0525ZM3.13523 27.8612C1.19523 21.9387 3.41648 16.9875 9.92711 12.7219C12.0759 11.3131 13.599 9.54187 15.0715 7.82938C17.5465 4.95125 19.6834 2.465 24.1684 2.465C32.7034 2.465 35.7177 6.87187 36.7559 9.49875C36.8202 9.65938 36.8734 9.825 36.9284 9.99C37.0727 12.4625 36.8384 15.5981 35.6434 17.3731C34.9677 
18.3775 33.7996 19.8462 33.1496 20.6869C34.7877 16.9831 33.9896 14.8088 33.9896 14.8088C32.1252 23.4937 26.7059 24.0325 23.1802 30.6931C23.1802 30.6931 26.3552 28.8319 28.3977 26.655C28.3977 26.655 25.5609 33.6256 18.7502 34.5037C13.8621 35.1331 12.5296 36.4669 11.3834 37.0381C7.73461 35.8375 4.65523 32.5025 3.13523 27.8612Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M14.7644 32.7426C13.2994 33.0007 11.8637 31.7932 12.0175 32.6638C12.17 33.5357 13.4812 34.0319 14.9462 33.7732C16.4087 33.5169 17.4706 32.5994 17.3175 31.7288C17.1625 30.8576 16.2262 32.4838 14.7644 32.7426ZM6.52 29.2476C5.70938 27.8694 6.11312 25.9201 5.45937 26.4326C4.80688 26.9451 4.93688 28.4763 5.7475 29.8551C6.55938 31.2326 7.74437 31.9344 8.3975 31.4226C9.05 30.9101 
7.3325 30.6244 6.52 29.2476ZM5.9375 23.4726C6.735 23.4626 5.46625 22.1438 5.505 20.4982C5.5425 18.8501 6.87063 17.5013 6.07063 17.5113C5.27438 17.5188 4.59813 18.8601 4.55875 20.5088C4.52125 22.1544 5.13875 23.4819 5.9375 23.4726ZM20.6819 27.5388C19.1619 27.7307 17.7306 26.4138 17.8519 27.3232C17.9744 28.2238 19.3069 28.8007 20.8262 28.6094C22.345 28.4169 23.4775 27.5269 23.3537 26.6194C23.2312 25.7157 
22.2 27.3451 20.6819 27.5388ZM28.4169 14.6644C29.2137 14.6994 30.015 13.4051 30.205 11.7707C30.3931 10.1401 29.8937 8.78882 29.0931 8.75319C28.2925 8.71882 29.4437 10.0982 29.255 11.7301C29.0687 13.3619 27.6137 14.6269 28.4169 14.6644ZM19.51 5.58506C20.4881 4.84631 21.9237 4.99444 21.5294 4.53256C21.1375 4.07631 20.0237 4.30256 19.0412 5.04069C18.0625 5.77944 17.5887 6.74881 17.9831 7.20819C18.3775 7.66632 18.53 6.32194 19.51 5.58506ZM14.5031 12.2569C16.1081 11.6407 17.9894 12.3982 17.6344 11.6219C17.2794 
10.8526 15.69 10.7251 14.0787 11.3407C12.4737 11.9551 11.4619 13.0819 11.8187 13.8551C12.175 14.6282 12.8956 12.8719 14.5031 12.2569ZM14.8694 25.3438C16.5087 23.9969 17.2812 22.1276 16.5944 21.1757C15.9094 20.2194 15.6969 22.8663 14.0587 24.2138C12.4187 25.5626 9.97812 25.1038 10.6644 26.0607C11.3469 27.0119 13.23 26.6913 14.8694 25.3438ZM25.5787 7.90757C26.8469 6.43382 27.2531 4.62444 26.4844 3.87444C25.7175 3.12069 25.9387 5.54256 24.6719 7.01756C23.4025 8.49444 21.1287 8.46757 21.8981 9.22007C22.6612 9.97132 24.31 9.38382 25.5787 
7.90757ZM25.5069 21.1776C24.1462 22.3782 22.0562 22.0644 22.6631 22.8544C23.2706 23.6463 24.865 23.3144 26.225 22.1163C27.5862 20.9176 28.1956 19.3032 27.5894 18.5126C26.9819 17.7213 26.8662 19.9794 25.5069 21.1776ZM11.6506 19.4613C13.1631 19.1601 14.2956 18.2269 14.1812 17.3819C14.0662 16.5357 13.0269 18.1563 11.515 18.4594C10.0025 18.7626 8.58875 17.6338 8.70375 18.4782C8.81937 19.3238 10.1387 19.7638 11.6506 19.4613ZM32.3106 13.5594C33.0931 13.9119 34.1637 13.0226 34.7012 11.5732C35.2387 10.1226 35.04 8.66194 34.2575 8.31069C33.4737 7.95819 34.3106 
9.70444 33.7744 11.1544C33.2362 12.6051 31.5287 13.2082 32.3106 13.5594ZM20.9325 17.2844C22.7312 16.7126 24.0431 15.5194 23.8581 14.6232C23.6756 13.7276 22.5162 15.6501 20.7169 16.2263C18.9156 16.8001 17.1619 15.8101 17.3456 16.7063C17.5275 17.6001 19.1344 17.8594 20.9325 17.2844Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup7.map((isActive, index) => (
            <button
              className={styles.rectangleParent3}
              key={index}
              onClick={() => {
                setCategoryFilter("Legumes");
                toggleStyle(index, 7);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.legumes}>
                Legumes
              </div>

              <svg
                className={styles.fluentEmojiHighContrastbeaIcon}
                width="35"
                height="35"
                viewBox="0 0 35 35"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.0583 22.4327C14.9943 22.4495 14.9342 22.4788 14.8816 22.5189C14.8289 22.5589 14.7847 22.609 14.7514 22.6662C14.7182 22.7235 14.6966 22.7867 14.6879 22.8523C14.6792 22.9179 14.6835 22.9846 14.7007 23.0485C14.8373 23.5425 14.8071 24.0678 14.6146 24.5428C14.4222 25.0178 14.0784 25.4161 13.6365 25.6757C13.5417 25.7303 13.4685 25.8156 13.4287 25.9174C13.3902 26.0152 13.3831 26.1226 13.4084 26.2246C13.4337 26.3266 13.4901 26.4182 13.5698 26.4867C13.6495 26.5552 13.7485 26.5972 13.8532 26.6069C13.9578 26.6166 14.0629 26.5935 14.1538 26.5409C14.7823 26.1682 
15.2711 25.5995 15.5451 24.9221C15.8217 24.2448 15.8671 23.4951 15.6741 22.7893C15.6394 22.661 15.5553 22.5516 15.4401 22.4852C15.3832 22.4509 15.3199 22.4286 15.2541 22.4196C15.1882 22.4105 15.1224 22.415 15.0583 22.4327Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M11.4821 33.2794C12.4092 33.7456 13.447 33.947 14.4812 33.8613C15.8427 33.7565 17.1479 33.2733 18.2494 32.4662C19.351 31.6592 20.2052 30.5604 20.7156 29.2938L22.7499 24.2746C23.2664 23.0123 23.4197 21.6308 23.1924 20.286C22.9651 18.9412 22.3663 17.6867 21.4637 16.6643C20.8334 15.942 
20.0294 15.3923 19.1277 15.067C18.226 14.7416 17.2562 14.6514 16.3099 14.8049C15.3783 14.9479 14.4982 15.325 13.7521 15.901C13.006 16.477 12.4184 17.2331 12.0443 18.0982L11.9863 18.2262C11.4925 19.4316 11.4091 20.7661 11.749 22.0237C11.8122 22.2535 11.798 22.4977 11.7087 22.7187C11.6193 22.9397 11.4598 23.1251 11.2546 23.2465C10.1396 23.904 9.27298 24.9114 8.78931 
26.1121L8.73243 26.2499C8.39307 27.1328 8.28428 28.0875 8.41633 29.0241C8.54837 29.9607 8.9169 30.8481 9.48712 31.6027C10.0121 32.3098 10.6953 32.884 11.4821 33.2794ZM13.7309 23.5363C13.9991 22.8743 14.0452 22.1431 13.8621 21.4527L13.8479 21.456C13.6355 20.6732 13.6815 19.8426 13.9792 19.088L14.0317 18.9787C14.2549 18.4466 14.6119 17.9813 15.068 17.6279C15.5241 17.2745 16.0638 17.0451 16.6348 16.9618C17.2169 16.866 17.8138 16.9205 18.3689 17.1202C18.924 
17.3198 19.4189 17.658 19.8067 18.1026C20.4411 18.8213 20.8619 19.7031 21.0215 20.6485C21.1812 21.5938 21.0733 22.5649 20.7101 23.4521L18.6757 28.4702C18.3176 29.3595 17.7183 30.1312 16.9454 30.6984C16.1724 31.2655 15.2565 31.6056 14.3007 31.6804C13.7143 31.7277 13.1255 31.625 12.5898 31.382C12.054 31.139 11.5889 30.7637 11.2382 30.2913C10.8919 29.8451 10.6651 29.318 10.5792 28.7597C10.4933 28.2015 10.5511 27.6306 10.7471 27.1009L10.8073 26.9565C11.1135 26.1898 11.6648 25.5455 12.3757 25.1244C12.9882 24.7559 13.4629 24.1991 13.732 23.5363H13.7309ZM27.1851 8.90304C27.1524 8.83163 27.1033 8.769 27.0417 8.72031C26.98 8.67163 26.9077 8.63829 26.8307 8.62304C26.7002 8.59752 26.5649 8.6238 26.4534 8.69632C26.3979 
8.73237 26.3501 8.77905 26.3127 8.83368C26.2753 8.88831 26.2492 8.9498 26.2357 9.0146C26.0826 9.73976 26.1701 10.4715 26.4807 11.1365C26.79 11.7996 27.3099 12.3418 27.9595 12.6787C28.0179 12.7095 28.0819 12.7285 28.1477 12.7346C28.2135 12.7407 28.2798 12.7337 28.343 12.7142C28.4061 12.6946 28.4647 12.6628 28.5156 12.6206C28.5664 12.5784 28.6084 12.5266 28.6392 12.4681C28.67 12.4097 28.689 12.3457 28.6951 12.2799C28.7012 12.2141 28.6943 12.1478 28.6747 12.0846C28.6552 12.0215 28.6234 11.9629 28.5812 11.912C28.539 11.8612 28.4871 11.8192 28.4287 11.7884C27.9743 11.5517 27.6102 11.1723 27.3926 10.7084C27.175 10.2446 27.1159 9.72205 27.2245 9.22132C27.245 9.11372 27.2312 9.00239 27.1851 8.90304Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M28.0948 20.0561H28.2337C29.1683 20.0575 30.0886 19.8269 30.9122 19.385C31.7357 18.9431 32.4366 18.3036 32.9521 17.524C33.4791 16.7394 33.7978 15.8335 33.8782 14.8917C33.9585 13.9499 33.7979 13.0032 33.4115 12.1406L33.359 12.0312C32.8109 10.8509 31.888 9.88498 30.734 9.28371C30.5221 9.17305 30.3524 8.99603 30.2506 8.77975C30.1489 8.56346 30.1208 8.31981 30.1707 8.08605C30.4408 6.81204 30.2843 5.48458 29.7255 4.30824L29.6709 4.19886C29.2519 3.35099 28.6238 2.62381 27.8459 2.08589C27.068 1.54797 26.166 1.21705 25.2248 1.12433C24.2721 1.02316 23.3094 1.16617 22.4272 1.53987C21.5451 1.91358 20.7726 2.50569 20.1826 3.26043C19.337 4.33208 18.8075 5.61862 18.6539 6.97504C18.5003 8.33146 18.7286 9.70383 19.313 10.9375L21.6219 15.8375C22.1999 17.0742 23.1123 18.1246 24.2559 18.8701C25.3995 19.6156 26.7299 
20.0264 28.0948 20.0561ZM23.116 3.63011C23.5897 3.39985 24.1096 3.28053 24.6363 3.28121C25.2825 3.27962 25.9161 3.4602 26.4643 3.80222C27.0126 4.14425 27.4533 4.63388 27.736 5.21496L27.748 5.24121C28.1027 5.98616 28.2026 6.82702 28.0324 7.63433C27.8811 8.3339 27.9643 9.06382 28.2691 9.71141C28.5739 10.359 29.0834 10.8882 29.719 11.2175C30.4716 11.6152 31.0693 12.2536 31.4165 13.0309C31.6559 13.5559 31.7557 14.1337 31.7063 14.7086C31.6568 15.2834 31.4598 15.8358 31.1343 16.3121C30.8075 16.8015 30.3625 17.2006 29.8406 17.4724C29.3187 17.7443 28.7367 17.8801 28.1484 17.8675C27.1894 17.8471 26.2552 17.5588 25.4515 17.0351C24.6478 16.5115 24.0067 15.7735 23.6005 14.9045L21.2927 10.0056C20.8816 9.13897 20.7207 8.1747 20.8284 7.22155C20.936 6.2684 21.3078 5.36429 21.9019 4.61121C22.2268 4.19558 22.6413 3.8609 23.116 3.63011ZM10.0424 7.67371C10.0979 7.61891 10.1652 7.57751 10.2391 7.55268C10.313 7.52785 10.3917 7.52024 10.469 7.53043C10.6024 7.54793 10.7216 7.61793 10.7949 7.72949C10.835 7.78193 10.8644 7.84178 10.8813 7.9056C10.8981 7.96942 10.9023 8.03595 10.8934 8.10136C10.7951 8.82553 10.4616 9.49732 9.94398 10.0132C9.42801 10.5308 8.75625 10.8643 8.0321 10.9626C7.96547 10.9739 7.89724 10.9718 7.83147 10.9562C7.7657 10.9406 7.70373 10.912 7.64924 10.872C7.59475 10.832 7.54886 10.7815 7.51429 10.7234C7.47973 10.6653 7.45719 10.6009 7.44802 10.5339C7.43885 10.467 7.44324 10.3988 7.46092 10.3336C7.47861 10.2684 7.50923 10.2074 7.55096 10.1542C7.59269 10.101 7.64469 10.0568 7.70386 10.0241C7.76303 9.99146 7.82816 9.97102 7.89538 9.96402C8.40321 9.89678 8.87472 9.66405 9.23694 9.30183C9.59916 8.93961 9.8319 8.4681 9.89913 7.96027C9.915 7.85188 9.96522 7.75144 10.0424 7.67371Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
                <path
                  d="M4.97964 18.1703C6.2744 18.6062 7.66548 18.6701 8.99475 18.3547C10.324 18.0394 11.5382 17.3574 12.4992 16.3864L16.3273 12.5583C17.2965 11.5963 17.9772 10.3823 18.2922 9.05362C18.6073 7.72491 18.5442 6.33455 18.1101 5.03984C17.8086 4.12895 17.2804 3.30972 16.5752 2.65918C15.8699 2.00863 15.0108 1.54817 14.0785 1.32109C13.1581 1.09122 12.1943 1.09942 11.278 1.34492C10.3616 1.59043 9.5228 2.06515 8.84057 2.72437L8.74214 2.82609C7.83554 3.74061 7.25023 4.92466 7.07417 6.20031C7.04186 6.43658 6.93323 6.65582 6.7648 6.82464C6.59638 6.99346 6.37739 7.10261 6.1412 7.13547C4.85393 7.30852 3.65996 7.90224 2.7451 8.82421L2.65104 8.92156C1.99506 9.60272 1.52333 10.4397 1.2803 11.3536C1.03728 12.2675 1.03098 13.2283 1.26198 14.1453C1.48891 15.0768 1.94941 15.9352 2.60005 16.6394C3.2507 17.3437 4.06893 17.8705 4.97964 18.1703ZM9.23979 6.50546C9.35354 5.68625 9.73198 4.92828 10.3171 4.34421L10.3718 4.28625C10.7853 3.88421 11.2954 3.59559 11.8529 3.44825C12.4105 3.30092 12.9966 3.29985 13.5546 3.44515C14.1272 3.58593 14.6545 3.86985 15.0873 4.27027C15.52 4.67068 15.844 5.17447 16.0287 5.73437C16.3333 6.64376 16.3775 7.62024 16.1562 8.55342C15.9349 9.48659 15.4569 10.3392 14.7764 11.015L10.9482 14.8431C10.2728 15.5238 9.42029 16.0018 8.48721 16.223C7.55413 16.4441 6.57777 16.3996 5.6687 16.0944C5.1091 15.9099 4.6057 15.586 4.20595 15.1532C3.8062 14.7203 3.52328 14.1928 3.38385 13.6203C3.23876 13.0481 3.24559 12.4479 3.40366 11.8791C3.56173 11.3103 3.86557 10.7927 4.2851 10.3773C4.86546 9.78979 5.62451 9.41162 6.44307 9.30218C7.15144 9.20727 7.80895 8.88208 8.31432 8.37671C8.81969 7.87135 9.14488 7.21383 9.23979 6.50546Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup8.map((isActive, index) => (
            <button
              className={styles.rectangleParent4}
              key={index}
              onClick={() => {
                setCategoryFilter("Grains");
                toggleStyle(index, 8);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.grains}>
                Grains
              </div>

              <svg
                className={styles.emojioneMonotoneearOfCornIcon}
                width="46"
                height="46"
                viewBox="0 0 46 46"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M39.4838 21.0989C33.4657 14.9708 38.801 11.0537 38.801 11.0537C38.801 11.0537 33.2508 11.0601 31.7263 15.6048C32.0491 15.5782 32.3711 15.6522 32.6442 15.8714C34.7005 17.5246 32.0347 19.9324 30.7927 18.86C29.302 17.5763 30.2536 16.008 31.4 15.6673C31.0888 
15.3755 30.7797 15.0851 30.4736 14.8048C30.401 15.911 28.9714 16.818 28.1822 16.1374C26.836 14.9773 27.7459 13.5506 28.7881 13.2954C28.4891 13.0331 28.1922 12.7758 27.8976 12.5249C27.6697 13.5276 26.3724 14.2773 25.6356 13.6419C24.4217 12.5954 25.0441 11.334 25.9426 10.9085C25.7169 10.7281 25.4897 10.5462 25.2676 10.373C25.2463 
10.5103 25.1969 10.6417 25.1225 10.759C23.8733 12.6457 21.4475 10.2084 22.2669 9.06847C22.4358 8.83344 22.6198 8.66453 22.8117 8.55097C22.6651 8.44891 22.5184 8.34397 22.374 8.24406C22.3423 8.28863 22.3143 8.33247 22.2705 8.37703C20.493 10.1631 19.3221 7.1336 19.8964 6.65419C19.8979 6.65275 19.8993 6.65275 19.9007 6.6506C19.7915 6.58614 19.6821 6.52217 19.5723 6.45869C19.5358 6.54366 19.4836 6.62096 19.4185 6.68653C18.0155 8.096 17.0847 5.79672 17.4757 5.32953C17.3707 5.27778 17.268 5.22891 
17.1645 5.18003C17.1548 5.21291 17.1408 5.24434 17.1228 5.27347C16.5169 6.21144 15.4754 4.86091 15.5631 4.49363C15.4524 4.4505 15.3403 4.40738 15.231 4.36784C14.8062 5.35469 13.4219 4.17881 13.57 3.87263L13.5714 3.87047C13.4564 3.84388 13.3414 3.81584 13.2293 3.79213C12.9447 4.37647 12.2238 3.95528 11.9521 3.60884C11.8411 3.60065 11.7299 3.59562 11.6186 3.59375C11.8486 3.87478 11.9521 4.24134 11.7681 4.46919C11.1198 5.27131 10.1416 4.31538 10.2817 3.68934C9.95955 3.74912 9.64498 3.84433 9.34375 3.97325C9.50834 4.00775 9.66575 4.07172 9.8059 4.18241C11.7271 
5.70041 9.09147 8.0996 7.93212 7.11275C7.55334 6.79003 7.35425 6.44072 7.28094 6.09572C7.16709 6.37601 7.08115 6.66683 7.02434 6.96397C7.63672 6.75194 8.65231 7.78766 7.84228 8.46616C7.6015 8.66741 7.20403 8.53156 6.92228 8.25988C6.92372 8.37272 6.92947 8.48916 6.93665 8.60703C7.29531 8.84638 7.82072 9.70169 7.11706 9.98344C7.14078 10.1035 7.16665 10.2257 7.19469 10.3486C7.21409 10.3313 7.2335 10.3126 7.2565 10.3018C7.56556 10.1473 8.77234 11.6294 7.68056 12.0225C7.72081 12.1383 7.7589 12.2525 7.80203 12.3704C7.80778 12.3639 7.81137 12.3553 7.81784 12.3503C8.08019 12.1253 9.60394 13.2681 
8.63362 13.9172C8.58326 13.951 8.5246 13.9704 8.464 13.9732C8.51934 14.0954 8.57397 14.2169 8.6329 14.3405C8.64081 14.3283 8.64584 14.3146 8.65447 14.3031C9.03397 13.8316 11.4375 14.794 10.0208 16.2545C9.93984 16.3421 9.8372 16.4068 9.72325 16.4421C9.7944 16.5686 9.86556 16.6966 9.93959 16.8245C9.95612 16.7972 9.96834 16.7663 9.98775 16.7426C10.4578 16.1582 13.4349 17.3492 11.6797 19.1597C11.6164 19.2244 11.5517 19.2747 11.4871 19.315C11.5927 19.4753 11.7027 19.6363 11.8127 19.798C11.9219 19.5723 12.0937 19.3531 12.3582 19.1554C13.4787 18.3202 15.8714 20.7906 14.0185 22.0635C13.9818 22.0894 13.9416 22.103 13.9028 22.1224C6.78069 20.9358 1.4375 21.7156 1.4375 21.7156C1.4375 21.7156 17.4362 27.6568 23.345 36.9186C26.5794 41.988 32.5436 44.3742 37.1364 40.4462L37.1277 40.4843C37.8034 41.1973 38.8987 41.1973 39.5736 40.4836L42.591 37.3017C43.12 
36.744 43.2285 35.916 42.9288 35.241C45.3165 32.0203 45.7815 27.513 39.4838 21.0989ZM42.1144 30.3938C41.1951 30.4894 39.8956 27.6273 41.1412 27.3427C43.1904 26.8755 42.734 30.3305 42.1144 30.3938ZM38.2986 35.76C37.6901 35.0228 37.0538 34.3091 36.391 33.6203C36.9445 32.9784 37.8645 32.6449 38.4625 33.1107C39.5391 33.9502 39.082 35.1189 38.2986 35.76ZM17.9874 22.926C17.0638 21.6991 19.3293 19.1374 20.8409 20.994C21.4317 21.7199 20.6641 23.0805 19.6664 23.465C19.1358 23.3038 18.6021 23.1526 18.0658 23.0115C18.0406 22.9813 18.0133 22.9598 17.9874 22.926ZM17.0674 11.3656C18.9082 12.8009 16.279 15.2066 15.1699 14.2708C13.3472 12.7319 15.8628 10.4255 17.0674 11.3656ZM12.7535 11.8795C10.93 10.3414 13.4457 8.03419 14.651 8.97503C16.4903 10.4097 13.8618 12.816 12.7535 11.8795ZM19.4846 13.7554C21.3253 15.1908 18.6954 17.5972 17.5871 16.6621C15.7636 15.1218 18.28 12.816 19.4846 13.7554ZM24.7501 24.0106C22.9267 22.4724 25.4423 20.1645 26.6469 21.1054C28.4876 22.54 25.8585 24.9471 24.7501 
24.0106ZM28.8758 23.3745C30.7165 24.8091 28.0866 27.2155 26.9776 26.2797C25.1548 24.7415 27.6704 22.4358 28.8758 23.3745ZM22.3826 21.6768C20.5591 20.1379 23.0747 17.8315 24.2801 18.7716C26.1194 20.2069 23.4909 22.6126 22.3826 21.6768ZM20.0366 19.085C18.2131 17.5447 20.7287 15.2389 21.9341 16.1784C23.7734 17.6137 21.1449 20.0201 20.0366 19.085ZM18.336 18.4424C19.2546 19.5716 16.8921 22.2489 15.4826 20.3751C14.559 19.1482 16.8245 16.5866 18.336 18.4424ZM20.6418 23.7806C21.2297 22.931 22.4286 22.4178 23.3507 23.5506C23.6231 23.8855 23.6023 24.3563 23.4082 24.8034C22.4983 24.4302 21.5756 24.0891 20.6418 23.7806ZM31.2987 25.7428C32.591 26.7505 31.6789 28.2325 30.6381 28.704C30.0276 28.2847 29.4046 27.8837 28.7701 27.5015C28.6831 26.2143 30.3736 25.0219 31.2987 25.7428ZM36.0302 33.2494C35.367 32.5677 34.6777 31.912 33.9638 31.2836C34.5014 30.5677 35.4911 30.1624 36.1229 30.6569C37.1687 31.4719 36.7712 32.5982 36.0302 33.2494ZM36.6368 30.5009C34.8148 28.9613 37.3304 26.6556 38.535 27.595C40.375 29.0296 37.7459 31.4353 36.6368 30.5009ZM34.1801 27.9975C32.3567 26.4579 34.8723 24.1514 36.0769 25.0916C37.9169 26.5262 35.2877 28.9326 34.1801 27.9975ZM33.5397 28.2807C34.5783 29.0914 34.1924 30.2112 33.46 30.8639C32.7401 30.2577 31.9976 29.6789 31.234 29.1288C31.7163 28.2792 32.844 27.7373 33.5397 28.2807ZM41.0758 30.1825C42.9158 31.6178 40.2866 34.0235 39.1783 33.0877C37.3556 31.5495 
39.8712 29.2431 41.0758 30.1825ZM40.5964 24.8515C42.0914 27.0329 39.7045 28.1815 38.8089 26.7986C37.334 24.5259 39.6189 23.4234 40.5964 24.8515ZM38.0362 21.5834C40.0926 23.2358 37.4267 25.6436 36.1833 24.5712C34.1377 22.8095 36.6886 20.5009 38.0362 21.5834ZM35.425 18.704C37.4814 20.3564 34.8155 22.7643 33.5735 21.6919C31.528 19.9302 34.0788 17.6223 35.425 18.704ZM33.5131 22.4818C35.3539 23.9157 32.724 26.3228 31.6164 25.387C29.7929 23.8489 32.3085 21.5424 33.5131 22.4818ZM31.0083 19.9302C32.8483 21.3649 30.2198 23.7719 29.1108 22.8354C27.2873 21.2973 29.8037 18.9901 31.0083 19.9302ZM28.479 17.3549C30.319 18.7903 27.6891 21.1967 26.5808 20.2609C24.7573 18.7213 27.273 16.4148 28.479 17.3549ZM25.9691 14.7998C27.8091 16.2344 25.18 18.6408 24.0716 17.705C22.2482 16.1661 24.7638 13.8597 25.9691 14.7998ZM23.4636 12.2489C25.3043 13.6828 22.6744 16.0899 21.5661 15.1534C19.7433 13.6153 22.259 11.3081 23.4636 12.2489ZM21.0723 9.81382C22.913 11.2492 20.2838 13.6555 19.1748 12.719C17.3521 11.1809 19.8684 8.87369 21.0723 9.81382ZM18.5315 7.5246C20.3722 8.95994 17.7423 11.3656 16.634 10.4298C14.8106 8.89094 17.3262 6.58519 18.5315 7.5246ZM16.0274 5.63572C17.6963 6.93881 15.3122 9.12094 14.306 8.2721C12.6529 6.87485 14.9349 4.78328 16.0274 5.63572ZM13.3946 4.52309C14.7567 5.66519 13.2595 6.98122 12.4322 6.24594C11.0716 5.03772 12.5027 3.77559 13.3946 4.52309ZM12.2072 6.55788C14.2399 8.18944 11.5949 10.5793 10.3665 9.52057C8.34469 7.77975 10.8754 5.48909 12.2072 6.55788ZM7.89547 10.1222C7.16162 9.21438 8.40147 7.75675 9.58812 9.14322C10.3097 9.98632 9.01672 11.5093 7.89547 10.1222ZM8.98797 12.8038C8.1499 11.6905 10.2055 9.36675 11.5769 11.0508C12.4107 12.0757 10.2673 14.5037 8.98797 12.8038ZM10.8431 15.3532C9.92019 14.1263 12.185 11.5647 13.6965 13.4212C14.6151 14.5504 12.2525 17.227 10.8431 15.3532ZM13.0913 17.9414C12.1684 16.7145 14.4332 14.1529 15.9447 16.0094C16.8633 17.1379 14.5008 19.8145 13.0913 17.9414ZM16.8511 22.586C16.8877 22.6313 16.9043 22.6823 16.9316 22.7305C16.1778 22.5529 15.4195 22.3952 14.6575 22.2575C15.2317 21.7803 16.0971 21.6789 16.8511 22.586ZM39.5873 37.421C39.2627 36.9839 38.9289 36.5538 38.5861 36.1309C39.1575 35.433 40.0466 34.8781 40.4512 35.1361C41.1829 35.604 40.4182 36.7612 39.5873 37.421ZM41.5646 34.6474C39.8468 35.6141 42.0469 30.705 42.7857 31.9959C43.1487 32.6284 42.1942 34.293 41.5646 34.6474Z"
                  fill={isActive ? "black" : "#AEAEAE"}
                />
              </svg>
            </button>
          ))}
          {buttonDataGroup9.map((isActive, index) => (
            <button
              className={styles.rectangleParent6}
              key={index}
              onClick={() => {
                setCategoryFilter("Seafoods");
                toggleStyle(index, 9);
              }}
            >
              <div
                className={isActive ? styles.groupInner : styles.frameChild}
              />
              <div className={styles.groupItem} />
              <div className={isActive ? styles.hot : styles.livestock}>
                Seafoods
              </div>

              <svg
                className={styles.gameIconsshrimp}
                width="43"
                height="42"
                viewBox="0 0 43 42"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_50_4507)">
                  <path
                    d="M33.6044 8.87988C32.1068 8.39981 30.0646 8.21399 27.8792 7.96784C25.7 7.72361 23.3947 7.42912 21.474 6.81195C19.5594 6.1967 18.0761 5.28216 17.363 3.84882L16.3278 4.36641C17.5501 6.57495 19.8086 7.55852 21.9316 8.15523C21.3864 8.0846 20.8237 7.98351 20.2644 7.85035C17.958 7.30025 15.687 6.2419 14.8226 5.25963L13.9521 6.02594C15.1677 7.40512 17.5477 
8.39561 19.9927 8.9776C22.4187 9.55565 24.8613 9.75668 26.3934 8.96101C26.8548 9.01892 27.3106 9.07306 27.7545 9.12213C29.9466 9.36836 31.9691 9.5737 33.2457 9.98325C33.8897 10.1915 34.3162 10.4472 34.5049 10.6859C34.6169 10.8242 34.6841 10.9547 34.6889 11.1338L35.8146 11.486C35.8792 10.9126 35.7386 10.3689 35.4141 9.96002C34.9855 9.43019 34.3532 9.12022 33.6044 8.87988ZM35.8974 12.7106C33.1401 11.8317 27.4919 10.652 22.4547 10.4766C22.5245 10.491 22.5933 10.5085 22.6609 10.5297C23.7743 10.878 24.4035 12.0832 
24.0551 13.1966C23.7068 14.3099 22.5035 14.9397 21.3901 14.5913C20.2767 14.243 19.647 13.0397 19.9953 11.9263C20.2455 11.1266 20.9366 10.5797 21.7174 10.4587C19.8413 10.4329 18.0802 10.5572 16.621 10.9043C19.2757 13.5786 20.1695 16.2692 20.8934 18.8121C25.801 18.97 29.0863 18.4851 33.4976 16.2793C31.9016 16.1784 31.2011 15.9997 29.9309 15.5483C31.8615 15.4432 36.7297 14.756 38.3083 14.3943C36.456 13.9687 33.4874 13.7219 31.7468 13.5866C32.9218 13.0473 35.4494 12.8258 36.3257 12.8527C36.1922 12.8043 36.0508 12.76 35.8974 12.7106ZM22.3139 11.6387C21.7972 11.4771 21.2642 11.756 21.1025 12.2727C20.9409 12.7894 21.2198 
13.3224 21.7365 13.4841C22.2532 13.6458 22.7862 13.3668 22.9479 12.8501C23.1096 12.3334 22.8306 11.8004 22.3139 11.6387ZM14.5129 10.5621C12.9157 11.8723 11.5736 13.1745 10.4972 14.4518C11.383 17.0386 12.7957 19.4391 16.0589 21.615C17.0108 20.7309 18.245 19.8947 19.7548 19.084C18.9472 16.2042 18.0216 13.4428 14.5129 10.5621ZM9.65544 15.5256C8.23412 17.4716 7.42447 19.3793 7.22949 21.2566C8.76713 23.3247 10.1316 24.7377 13.8357 25.0727C14.0533 24.1615 14.5223 23.2885 15.2427 22.4536C12.1871 20.3698 10.6144 17.9732 9.65544 15.5256ZM20.2712 20.11C19.9059 20.3063 19.5609 20.5023 19.2344 20.704C20.8375 22.401 21.8543 24.1374 22.6574 26.5565L23.7595 26.1855C22.9437 23.7421 21.8693 21.8661 20.2712 20.11ZM17.8972 21.5891C17.5634 21.8358 17.2561 22.0841 16.9814 22.3358C17.4412 22.7228 18.1103 23.4117 18.6949 24.1551C19.4174 25.0835 20.0222 26.1507 20.1343 26.8071L21.2801 26.5983C21.0875 25.552 20.3862 24.4479 19.6114 23.4491C19.0391 22.7095 18.438 22.0622 17.8972 21.5891ZM15.9775 23.3859C15.7044 23.7192 15.4905 24.0574 15.3193 24.3888C15.5892 24.5408 16.0358 24.8832 16.4236 25.3489C16.9452 25.9916 17.4132 26.8269 17.5821 27.474L18.7019 27.1761C18.4654 26.2916 17.9366 25.3698 17.3213 24.6168C16.9001 24.1068 16.4758 23.6498 15.9775 23.3859ZM7.24152 23.1175C7.52481 25.5361 8.86284 27.9875 11.375 30.4552C12.1077 30.6169 12.701 30.7282 13.2539 30.6446C13.7438 30.5683 14.2453 30.347 14.8803 29.742C14.1044 28.574 13.6953 27.3992 13.6999 26.2188C10.4734 25.9116 8.66567 24.7045 7.24152 23.1175ZM28.61 34.7064C27.9722 
34.5001 25.878 34.1353 23.7356 33.9242C22.1939 33.7795 20.5863 33.7155 19.397 33.7823C20.1764 33.8168 21.0668 34.0144 22.028 34.2881C22.407 34.3932 22.8007 34.5164 23.1925 34.6457C24.3658 35.0398 25.5614 35.5355 26.6063 36.038C27.3263 36.3916 27.9706 36.7283 28.505 37.071C29.0891 36.6933 29.618 36.1902 29.7623 35.8369C30.0029 35.176 28.9525 34.8204 28.61 34.7064ZM15.5743 30.675C14.7044 31.3618 13.9241 31.8268 12.909 31.8333C14.0437 32.7827 15.3476 33.7309 16.8391 34.6838C17.4901 34.3945 18.1543 33.9338 18.2518 33.2552C17.184 32.3943 16.2834 31.5385 15.5743 30.675ZM18.4884 35.0243L17.7628 35.3578C18.5039 35.8598 19.7302 36.5812 21.2465 37.0016C23.5044 37.6203 26.3897 38.7594 28.5102 38.5652C25.7451 36.8694 21.2662 34.4347 18.4884 35.0243Z"
                    fill={isActive ? "black" : "#AEAEAE"}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_50_4507">
                    <rect
                      width="33"
                      height="33"
                      fill="white"
                      transform="translate(10.8193 0.458252) rotate(17.3742)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </button>
          ))}
        </div>
        {buttonDataGroup10.map((isActive, index) => (
          <button
            className={styles.marketplaceCategoriesInner}
            key={index}
            onClick={() => {
              setCategoryFilter("Processed Foods");
              toggleStyle(index, 10);
            }}
          >
            <div className={styles.frameGroup}>
              <div className={styles.frameGroup}>
                <div className={styles.frameGroup}>
                  <div className={styles.frameGroup}>
                    <div
                      className={
                        isActive ? styles.groupInner : styles.frameChild
                      }
                    />
                  </div>
                  <div
                    className={
                      isActive ? styles.processedFoodss : styles.processedFoods
                    }
                  >
                    Processed Foods
                  </div>
                </div>
              </div>
              <div className={styles.frameDiv}>
                <div className={styles.rectangleWrapper1}>
                  <div className={styles.frameChild1} />
                </div>

                <svg
                  className={styles.frameIcon}
                  width="35"
                  height="35"
                  viewBox="0 0 35 35"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M11.0071 1.61043C8.71148 1.61159 6.82544 1.83929 4.94973 2.22026C3.78735 1.74591 2.64534 1.43447 2.12854 2.30092C1.59841 3.18959 2.10817 4.02713 2.96546 4.85175C1.1592 12.0598 1.59664 22.1465 2.54827 28.7272C1.84915 29.4325 1.39573 30.1621 1.85291 30.8596C2.45954 31.7851 3.5338 31.6153 4.74739 31.1327C7.99596 31.6978 11.6074 
31.8182 15.2997 31.666C16.1832 28.4261 17.8098 25.1662 19.3569 22.7622C20.4584 21.2037 21.5063 19.7055 22.7773 18.5257C21.9591 13.3021 20.7634 8.35804 18.9436 4.36353C19.4727 3.71125 19.6974 3.04597 19.2818 2.34918C18.8268 1.5865 17.8871 1.73805 16.8758 2.10835C14.8836 1.76205 12.8994 1.6094 11.0071 1.61043ZM9.88904 6.43291C11.0105 7.69878 11.7112 8.95708 11.969 10.0107L11.0376 12.0603L9.30634 10.4748C9.16347 9.42329 9.35693 8.02684 9.88904 6.43291ZM13.9768 9.22402C14.122 10.3566 14.131 11.384 14.0262 12.2599L12.1392 14.8439L11.7334 12.838L12.9753 10.105C13.2789 
9.81027 13.6124 9.51571 13.9768 9.22402ZM8.23153 10.8789L10.824 13.1599L11.2195 15.1151L8.50633 13.4987C8.04306 12.717 7.09909 11.0615 7.13101 10.542C8.17124 10.8387 8.05844 10.8141 8.23153 10.8789ZM15.3908 13.0487C15.4839 14.6122 15.2649 15.8462 14.8501 16.7185L12.8247 18.2339L12.3956 16.112L14.0961 13.7837C14.4886 13.5328 14.9205 13.2868 15.3908 13.0487V13.0487ZM7.72157 14.6185C8.05947 14.6435 8.38411 14.6785 8.69418 14.7224L11.4752 16.3793L11.892 18.4399L9.77125 17.9301C9.01014 17.3046 8.2789 16.2069 7.72157 14.6185ZM16.2011 17.4138C15.7312 20.0427 14.6616 21.5199 13.5516 
21.8269L13.0343 19.2698L15.0814 17.738C15.45 17.6146 15.8236 17.5065 16.2011 17.4138ZM23.1358 19.8951C23.3726 19.8045 23.6807 19.7543 24.0005 19.7541C24.713 19.7541 25.2905 19.9972 25.2905 20.2972C25.2907 20.5972 24.7131 20.8405 24.0006 20.8405C23.3309 20.8403 22.7729 20.6244 22.716 20.3434C21.9419 21.205 21.1418 22.2764 20.3881 23.4339C20.0982 23.8788 19.8164 24.3377 19.544 24.8021C20.1711 24.8437 20.6333 25.0712 20.6336 25.3384C20.6336 25.6384 20.0559 25.8816 19.3434 25.8816C19.2116 25.8815 19.0799 25.8726 18.9493 25.855C17.8993 27.7878 17.0653 29.7318 16.6793 31.1821C17.7611 31.455 18.8695 31.669 19.9911 
31.8301L19.991 31.8314C19.991 32.1314 20.5686 32.3745 21.281 32.3745C21.5382 32.3744 21.7893 32.3419 22.0022 32.2812C21.9969 32.3005 21.9942 32.3205 21.994 32.3406C21.994 32.6406 22.5716 32.8837 23.2839 32.8837C23.9964 32.8837 24.5739 32.6406 24.574 32.3406C24.5735 32.2918 24.5575 32.2434 24.5261 32.1964C25.4314 32.2154 26.3371 32.204 27.2416 32.1623C27.23 32.1908 27.2239 32.2212 27.2236 32.2519C27.2236 32.5519 27.8012 32.7951 28.5135 32.7951C29.226 32.7951 29.8036 32.5519 29.8036 32.252C29.8032 32.1571 29.7437 32.0639 29.6312 31.9817C30.1502 31.9273 30.6681 31.8626 31.1846 31.7879C31.4113 31.9612 31.8442 32.069 32.3143 
32.069C33.027 32.069 33.6046 31.8258 33.6045 31.5258C33.6041 31.4308 33.5446 31.3377 33.432 31.2554C33.4355 30.4801 33.1978 29.3985 32.7459 28.2153C32.2767 26.987 31.6014 25.6457 30.8389 24.358C30.689 24.3815 30.5376 24.3933 30.386 24.3933C29.6735 24.3933 29.0959 24.15 29.096 23.8501C29.0967 23.5815 29.5633 23.3536 30.1939 23.3136C29.2788 21.8916 28.2906 20.5956 27.4221 19.6709C26.9626 19.1816 26.5345 18.7966 26.1919 18.558C25.8493 18.3194 25.5905 18.2695 25.0671 18.4434C24.5438 18.6173 23.7448 19.2707 23.1358 19.8951ZM9.63918 18.8806L12.1008 19.4722L12.6114 21.9963C11.4966 22.0173 10.031 21.0836 8.63341 19.0251C8.98088 18.9622 9.31612 18.9148 9.63918 18.8806ZM13.772 22.6914C13.9714 23.9183 14.2166 25.118 14.5244 26.2872L13.6058 26.5481C13.2865 25.3383 13.0336 24.1026 12.8292 22.8448L13.772 22.6914ZM22.7524 27.6278C23.4649 27.6278 24.0424 27.8711 24.0423 28.1711C24.0423 28.4711 23.4647 28.7142 22.7524 28.7142C22.6757 28.7141 22.5991 28.7111 22.5227 28.7051C22.6061 28.7781 22.6496 28.8581 22.65 28.9392C22.65 29.2392 
22.0724 29.4823 21.3599 29.4823C20.6475 29.4823 20.0699 29.2392 20.0699 28.9392C20.0699 28.6392 20.6475 28.3961 21.3599 28.3961C21.4369 28.3962 21.5138 28.3992 21.5896 28.4051C21.5062 28.3321 21.4626 28.2521 21.4621 28.1711C21.462 27.871 22.0398 27.6278 22.7524 27.6278ZM29.1378 28.684C29.8503 28.684 30.4279 28.9273 30.4277 29.2273C30.4277 29.5273 29.8502 29.7705 29.1378 29.7705C28.4253 29.7705 27.8477 29.5273 27.8477 29.2273C27.8475 28.9272 28.4252 28.684 29.1378 28.684ZM14.8647 32.4084C14.1521 32.4084 13.5746 32.6517 13.5747 32.9517C13.5747 33.2517 14.1523 33.4948 14.8646 33.4948C14.9611 33.4947 15.0576 33.4899 15.1536 33.4805C15.2553 33.7432 15.7941 33.9361 16.4263 33.9362C17.1389 33.9362 17.7165 33.693 17.7165 33.393C17.7164 33.093 17.1388 32.8498 16.4263 32.8498C16.3299 32.85 16.2335 32.8548 16.1375 32.8642C16.0358 32.6015 15.497 32.4085 14.8646 32.4084H14.8647Z"
                    fill={isActive ? "black" : "#AEAEAE"}
                  />
                </svg>
              </div>
            </div>
          </button>
        ))}
        {buttonDataGroup12.map((isActive, index) => (
          <button
            className={styles.rectangleParent5}
            key={index}
            onClick={() => {
              setCategoryFilter("Livestock");
              toggleStyle(index, 12);
            }}
          >
            <div className={isActive ? styles.groupInner : styles.frameChild} />
            <div className={styles.groupItem} />
            <div className={isActive ? styles.hot : styles.livestock}>
              Livestock
            </div>

            <svg
              className={styles.emojioneMonotonegoatIcon}
              width="34"
              height="34"
              viewBox="0 0 34 34"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M32.1513 15.0349C32.1147 14.9536 32.0738 14.8797 32.035 14.8027C34.4835 12.4636 31.1744 8.51429 31.1744 8.51429C31.1744 8.51429 30.2617 11.1243 30.0609 12.9513C30.0253 12.9423 29.9897 12.929 29.9535 12.9221C28.2392 12.607 26.2656 12.4604 23.7427 12.4604C22.5803 12.4604 21.4647 12.4902 20.3857 12.5183C19.4539 12.5428 18.5736 12.5661 17.7831 
12.5661C14.9431 12.5661 14.5037 12.2033 14.4368 12.0928C14.4384 10.7073 14.1643 9.39776 13.641 8.26354C14.5468 6.96782 14.5574 5.15254 14.262 4.37851C14.016 3.73304 13.5517 3.66292 13.3631 3.66292C13.2319 3.66292 13.1055 3.6932 12.9854 3.7527C12.8085 3.83982 12.5238 3.9822 12.1928 4.16389C13.4789 3.12795 15.197 3.04136 15.197 3.04136C12.2188 1.93954 10.548 3.20604 9.70867 4.59739C10.4264 2.13345 13.2282 1.06723 13.2282 1.06723C9.37079 0.933356 8.00017 3.18054 7.6251 5.09729C6.9536 5.33636 6.3076 5.74064 
5.71314 6.30748C4.44664 7.51714 4.20545 8.44151 3.94992 9.41901C3.68217 10.4443 3.34907 11.7204 1.53379 14.068C0.928167 14.8521 1.03601 15.539 1.15501 15.879C1.43976 16.6966 2.32164 17.2789 3.70235 17.5625C3.7252 17.5673 3.75229 17.571 3.77673 17.5753C3.69864 19.6472 6.41598 20.5896 6.41598 20.5896C6.41598 20.5896 5.52295 19.0118 6.17267 16.8432L6.18011 16.839C6.4537 16.6892 6.81867 16.636 7.20595 16.5803C7.62776 16.5192 8.14307 16.4443 8.62332 16.1962C8.88045 18.4125 9.63695 21.761 11.8241 24.4672C11.9245 24.9767 12.2178 27.1787 11.0804 
31.9297L10.8392 32.9374H14.083L14.27 32.4051L15.8499 27.9017L15.9115 27.7275L15.8935 27.5426C15.8292 26.8615 15.8388 26.0992 15.9068 25.6747C16.5703 25.8591 17.3842 25.9494 18.3787 25.9494C21.2193 25.9494 24.6857 25.1966 26.0271 24.8773C26.7193 25.9053 27.8673 26.7951 28.5457 27.2695C28.3247 28.1116 28.0092 29.7521 28.0527 32.1411L28.0676 32.9374H31.3109L31.406 32.2399C31.5802 30.958 32.468 26.4195 32.477 26.3739L32.5221 26.1438L32.4425 25.9244C31.8921 24.4061 31.8942 23.5981 31.9117 23.3606C33.379 20.5094 33.072 17.061 32.1513 15.0349ZM31.7152 26.2118C31.7152 
26.2118 31.1303 29.1953 30.8099 31.0451H28.8374C28.916 28.3289 29.4685 26.9205 29.4685 26.9205C29.4685 26.9205 27.1034 25.4633 26.4005 23.9524C26.4005 23.9524 21.8515 25.1387 18.3787 25.1387C17.3746 25.1387 16.4614 25.0394 15.7734 24.7838C15.7282 24.7659 15.6802 24.7564 15.6316 24.7557C14.8448 24.7557 15.12 27.6228 15.12 27.6228L13.9188 31.0441H12.0791C13.1591 25.9605 12.5323 24.0826 12.5323 24.0826C9.03982 19.8984 9.27729 13.839 9.27729 13.839C8.84539 16.2716 7.06623 15.4359 5.81832 16.1202C4.84985 16.6514 4.51198 16.8082 4.18632 16.8082C4.07414 16.8057 3.96252 
16.7916 3.85323 16.7662C2.25948 16.4389 1.32395 15.6309 2.13889 14.578C5.71686 9.9492 3.86704 9.16986 6.23801 6.90673C6.65345 6.51042 7.08217 6.21876 7.51354 6.01476C7.46892 6.91735 7.62723 7.60904 7.7781 7.7036C8.43154 8.1132 9.88823 7.82154 9.67042 6.87167C9.58055 6.48765 9.53809 6.09407 9.54398 5.69973C9.97244 5.76657 10.3855 5.90942 10.7637 6.12154C11.5919 5.34432 12.8032 4.74082 13.3185 4.48582C13.332 4.47847 13.3472 4.47463 13.3626 4.47467C13.7398 4.4752 13.9613 6.91204 12.7044 8.15198C13.2973 9.21714 13.6601 10.5633 13.6601 12.0827C13.6601 13.1574 15.3261 
13.3774 17.7826 13.3774C19.4869 13.3774 21.5699 13.2716 23.7427 13.2716C25.77 13.2716 27.8764 13.3646 29.8191 13.7216C31.8119 14.0871 33.1586 19.3879 31.1643 23.096C31.1643 23.096 30.9162 24.013 31.7152 26.2118Z"
                fill={isActive ? "black" : "#AEAEAE"}
              />
              <path
                d="M6.89047 11.1047C7.32617 11.1047 7.67938 10.7494 7.67938 10.311C7.67938 9.87268 7.32617 9.51733 6.89047 9.51733C6.45477 9.51733 6.10156 9.87268 6.10156 10.311C6.10156 10.7494 6.45477 11.1047 6.89047 11.1047Z"
                fill={isActive ? "black" : "#AEAEAE"}
              />
              <path
                d="M2.72835 14.6812C2.65132 14.7933 2.595 15.0642 2.70072 15.1433C2.8075 15.2241 3.03807 15.0833 3.11457 14.9723C3.15188 14.9186 3.16712 14.8527 3.15713 14.7881C3.14714 14.7235 3.11269 14.6652 3.06091 14.6254C3.03575 14.6063 3.00695 14.5925 2.97628 14.585C2.94562 14.5774 2.91373 14.5762 2.88258 14.5815C2.85144 14.5867 2.82169 14.5982 2.79516 14.6154C2.76864 14.6325 2.7459 14.6549 2.72835 14.6812ZM5.55725 14.5908C5.46614 14.8907 5.33989 15.1787 5.18113 15.4488C4.86822 15.988 4.40391 16.4056 3.86682 16.7615C4.18214 16.6796 4.4782 16.5362 4.73807 16.3397C5.00539 16.1349 5.23129 15.881 5.40372 15.5917C5.74585 15.0063 5.8845 14.2933 5.75222 13.642C5.71716 13.9637 5.65189 14.2814 5.55725 14.5908ZM13.0968 5.38481C12.8232 5.50488 10.951 6.45741 10.6721 7.34247C10.483 7.94066 10.5691 7.9226 10.7704 7.71116C10.9744 7.49706 11.5211 7.35203 11.2963 7.49706C11.0722 7.64263 10.9484 7.81741 11.1991 7.73241C11.4472 7.65113 11.8595 7.62669 11.5131 7.76588C11.1678 7.90347 10.7168 8.24081 10.8198 8.40338C10.9245 8.56222 11.1295 8.52875 11.3171 8.44428C13.3974 7.52256 13.416 5.24509 13.0968 5.38481Z"
                fill="#AEAEAE"
              />
            </svg>
          </button>
        ))}
        {buttonDataGroup5.map((isActive, index) => (
          <button
            className={styles.rectangleParent1}
            key={index}
            onClick={() => {
              setCategoryFilter("Poultry");
              toggleStyle(index, 5);
            }}
          >
            <div className={isActive ? styles.groupInner : styles.frameChild} />
            <div className={styles.groupItem} />
            <div className={isActive ? styles.hot : styles.livestock}>
              Poultry
            </div>

            <svg
              className={styles.healthiconsanimalChickenOut}
              width="44"
              height="44"
              viewBox="0 0 44 44"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12.8332 12.8333C13.0763 12.8333 13.3094 12.7368 13.4814 12.5648C13.6533 12.3929 13.7498 12.1598 13.7498 11.9167C13.7498 11.6736 13.6533 11.4404 13.4814 11.2685C13.3094 11.0966 13.0763 11 12.8332 11C12.5901 11 12.3569 11.0966 12.185 11.2685C12.0131 11.4404 11.9165 11.6736 11.9165 11.9167C11.9165 12.1598 12.0131 12.3929 12.185 12.5648C12.3569 12.7368 12.5901 12.8333 12.8332 12.8333Z"
                fill={isActive ? "black" : "#AEAEAE"}
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M13.8287 5.49999C14.9837 4.34499 16.9582 5.16266 16.9582 6.79616V8.24999H18.4121C20.0456 8.24999 20.8632 10.2245 19.7082 11.3795L18.0647 13.0231C18.0536 13.0343 18.0423 13.0453 18.0307 13.0561L21.1987 18.4158C21.5736 19.0502 22.131 19.5569 22.7981 19.8699C23.4653 20.1829 24.2112 20.2876 24.9387 20.1703L36.4704 18.3122C37.9646 18.0712 38.9821 19.7872 38.0544 20.9834C37.1652 22.1302 36.717 23.5959 36.3934 25.2001C35.1852 31.185 30.1161 35.7977 23.8332 36.5567V38.5H26.1249V40.3333H17.4166V38.5H21.9999V36.6667C17.0371 36.6667 12.6407 34.2769 9.98516 30.6093C7.85482 27.6668 8.20132 23.8856 9.06299 20.7396L9.51674 19.085C9.74755 18.243 9.80401 17.3627 9.68266 16.4982L9.62491 16.5H7.25441C5.62091 16.5 4.80324 14.5255 5.95824 13.3705L13.8287 5.49999ZM18.4121 10.0833L17.0682 11.4272L16.3991 10.2969C16.3137 10.1523 16.2198 10.0131 16.1177 9.87982C16.3697 10.01 16.6548 10.0833 16.9582 10.0833H18.4121ZM15.1249 8.24999C15.1249 8.55616 15.2001 8.84582 15.333 9.09882C14.8216 8.71036 14.2275 8.44527 13.5968 8.32424L15.1249 6.79616V8.24999ZM7.25441 14.6667L8.71649 13.2046C8.75316 13.3962 8.80449 13.5868 8.87049 13.7775L9.17666 14.6667H7.25441ZM10.6039 13.1798C10.4168 12.6332 10.439 12.0366 10.6661 11.5053C10.8932 10.9741 11.3092 10.5458 11.8336 10.3034C12.3581 10.0609 12.9538 10.0215 13.5056 10.1926C14.0575 10.3638 14.5263 10.7334 14.8215 11.2301L19.6212 19.349C20.1836 20.3003 21.0195 21.06 22.02 21.5293C23.0205 21.9986 24.1392 22.1556 25.2302 21.9798L36.3659 20.1859C35.3741 21.6132 34.9093 23.287 34.5967 24.838C34.3482 26.0644 33.9093 27.2443 33.296 28.3351C33.2097 28.3898 33.1332 28.4586 33.0696 28.5386C31.3343 30.7202 28.7631 32.0833 25.9086 32.0833C20.7661 32.0833 16.4999 27.6247 16.4999 22C16.4999 21.7569 16.4033 21.5237 16.2314 21.3518C16.0595 21.1799 15.8264 21.0833 15.5832 21.0833C15.3401 21.0833 15.107 21.1799 14.9351 21.3518C14.7632 21.5237 14.6666 21.7569 14.6666 22C14.6666 28.5267 19.6459 33.9167 25.9086 33.9167C26.2752 33.9167 26.6364 33.8983 26.9939 33.8617C25.408 34.5063 23.7118 34.8363 21.9999 34.8333C17.6338 34.8333 13.7866 32.7332 11.4702 29.535C9.85132 27.2992 10.0035 24.2431 10.8312 21.2245L11.285 19.569C11.724 17.9674 11.6694 16.2706 11.1282 14.7006L10.6039 13.1798Z"
                fill={isActive ? "black" : "#AEAEAE"}
              />
            </svg>
          </button>
        ))}
      </div>
    </div>
  );
};

export default MarketplaceCategories;
